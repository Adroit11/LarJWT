!function(){"use strict";angular.module("jwtAuth",["ui.bootstrap","ui.router","satellizer"]).config(function($stateProvider,$urlRouterProvider,$authProvider,$httpProvider,$provide){function redirectWhenLoggetOut($q,$injector){return{responseError:function(rejection){var $state=$injector.get("$state"),rejectionReasons=["token_not_provided","token_expired","token_absent","token_invalid","user_not_found"];return angular.forEach(rejectionReasons,function(value,key){rejection.data.error===value&&(localStorage.removeItem("user"),$state.go("auth"))}),$q.reject(rejection)}}}$provide.factory("redirectWhenLoggetOut",redirectWhenLoggetOut),$httpProvider.interceptors.push("redirectWhenLoggetOut"),$authProvider.loginUrl="/api/authenticate",$urlRouterProvider.otherwise("/auth"),$stateProvider.state("auth",{url:"/auth",templateUrl:"angular-partials/authView",controller:"AuthController as auth"}).state("users",{url:"/users",templateUrl:"angular-partials/userView",controller:"UserController as user"})}).run(function($rootScope,$state){$rootScope.$on("$stateChangeStart",function(event,toState){var user=JSON.parse(localStorage.getItem("user"));user&&($rootScope.authenticated=!0,$rootScope.currentUser=user,"auth"===toState.name&&(event.preventDefault(),$state.go("users")))})})}();
!function(){"use strict";function AuthController($auth,$state,$http,$rootScope){var ac=this;ac.login=function(){var credentials={email:ac.email,password:ac.password};$auth.login(credentials).then(function(){return $http.get("api/authenticate/user")},function(error){ac.loginError=!0,ac.loginErrorText=error.data.error}).then(function(response){var user=JSON.stringify(response.data.user);localStorage.setItem("user",user),$rootScope.authenticated=!0,$rootScope.currentUser=response.data.user,$state.go("users")})}}angular.module("jwtAuth").controller("AuthController",AuthController)}();
!function(){"user strict";function UserController($http,$auth,$rootScope){var uc=this;uc.users,uc.error,uc.getUsers=function(){$http.get("api/authenticate").success(function(users){uc.users=users}).error(function(error){uc.error=error})},uc.logout=function(){$auth.logout().then(function(){localStorage.removeItem("user"),$rootScope.authenticated=!1,$rootScope.currentUser=null})}}angular.module("jwtAuth").controller("UserController",UserController)}();